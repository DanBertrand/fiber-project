{"version":3,"sources":["Components/FrontText.jsx","Components/BackText.jsx","textures/Concrete_Wall_001_SD/Concrete_Wall_001_basecolor.jpg","textures/Concrete_Wall_001_SD/Concrete_Wall_001_normal.jpg","textures/Concrete_Wall_001_SD/Concrete_Wall_001_roughness.jpg","textures/Concrete_Wall_001_SD/Concrete_Wall_001_ambient_occlusion.jpg","Components/Wall.jsx","models/uploads_files_2551085_tree.glb","Components/Tree.jsx","textures/GroundForest008/REGULAR/6K/GroundForest008_COL_6K.jpg","textures/GroundForest008/REGULAR/6K/GroundForest008_NRM_6K.jpg","textures/GroundForest008/REGULAR/6K/GroundForest008_DISP_6K.jpg","textures/GroundForest008/REGULAR/6K/GroundForest008_AO_6K.jpg","textures/GroundForest008/REGULAR/6K/GroundForest008_GLOSS_6K.jpg","Components/Ground.jsx","models/uploads_files_2551085_tree2.glb","Components/Tree2.jsx","models/mapleTree.glb","Components/MapleTree.jsx","Components/Project1.jsx","Components/Header.jsx","App.jsx","index.js"],"names":["FrontText","position","color","rotation","scale","font","FontLoader","parse","Raleway","groupText","useRef","text1","toUpperCase","text2","text3","text4","textOptions","size","height","bevelEnabled","bevelThickness","bevelSize","ref","receiveShadow","castShadow","attach","args","BackText","text","Wall","wall","useLoader","TextureLoader","colorTexture","normalTexture","roughnessTexture","aoTexture","colorMap","normalMap","roughnessMap","aoMap","map","aoMapIntensity","Tree","roughness","gltf","GLTFLoader","treeModel","console","log","nodes","Cube","fallback","object","scene","Ground","displacementTexture","displacementMap","repeat","set","wrapS","RepeatWrapping","wrapT","Math","PI","displacementScale","lightMapIntensity","Tree2","MapleTree","Project1","shadows","camera","fov","intensity","far","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-left","shadow-camera-right","OrbitControls","Header","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c0f128b.chunk.js","sourcesContent":["import React from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { FontLoader } from \"three\";\nimport Raleway from \"../fonts/Raleway.json\";\nimport { useRef } from \"react\";\n\nconst FrontText = ({ position, color, rotation, scale }) => {\n  const font = new FontLoader().parse(Raleway);\n\n  const groupText = useRef();\n\n  const text1 = \"Viele kleine leute die in\".toUpperCase();\n  const text2 = \"Vielen kleinen orten\".toUpperCase();\n  const text3 = \"Viele kleine dinge tun,\".toUpperCase();\n  const text4 = \"Können das gesicht der welt verändern\".toUpperCase();\n\n  const textOptions = {\n    font,\n    size: 8,\n    height: 1,\n    bevelEnabled: true,\n    bevelThickness: 3,\n    bevelSize: 0.02,\n    // bevelOffset: 0.25,\n    // bevelSegments: 300,\n  };\n\n  return (\n    <group ref={groupText} scale={scale} position={position}>\n      <mesh\n        position={[-72.43147941968631, 0, 0]}\n        rotation={rotation}\n        receiveShadow\n        castShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text1, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[-64.82084710670225, -10, 0]}\n        rotation={rotation}\n        receiveShadow\n        castShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text2, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[-69.37245579380547, -20, 0]}\n        rotation={rotation}\n        receiveShadow\n        castShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text3, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[-125.76339178635322, -30, 0]}\n        rotation={rotation}\n        receiveShadow\n        castShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text4, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n    </group>\n  );\n};\n\nexport default FrontText;\n","import React from \"react\";\nimport { FontLoader } from \"three\";\nimport Raleway from \"../fonts/Raleway.json\";\n\nconst BackText = ({ position, text, color, rotation, scale }) => {\n  const font = new FontLoader().parse(Raleway);\n\n  const text1 = \"MANY SMALL PEOPLE WHO IN\";\n  const text2 = \"MANY SMALL PLACES DO\";\n  const text3 = \"MANY SMALL THINGS\";\n  const text4 = \"THAT CAN ALTER THE FACE OF THE WORLD\";\n\n  const textOptions = {\n    font,\n    size: 8,\n    height: 1,\n    bevelEnabled: true,\n    bevelThickness: 3,\n    bevelSize: 0.02,\n    // bevelOffset: 0.25,\n    // bevelSegments: 300,\n  };\n\n  return (\n    <group scale={scale} position={position}>\n      <mesh\n        position={[80.5176376518733, 0, 0]}\n        rotation={rotation}\n        castShadow\n        receiveShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text1, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[67.44339179394206, -11, 0]}\n        rotation={rotation}\n        castShadow\n        receiveShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text2, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[58.09688874502937, -20, 0]}\n        rotation={rotation}\n        castShadow\n        receiveShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text3, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n      <mesh\n        position={[117.10305406884478, -30, 0]}\n        rotation={rotation}\n        castShadow\n        receiveShadow\n      >\n        <textGeometry attach=\"geometry\" args={[text4, textOptions]} />\n        <meshStandardMaterial attach=\"material\" color={color} />\n      </mesh>\n    </group>\n  );\n};\n\nexport default BackText;\n","export default __webpack_public_path__ + \"static/media/Concrete_Wall_001_basecolor.e05b2082.jpg\";","export default __webpack_public_path__ + \"static/media/Concrete_Wall_001_normal.f4d60b55.jpg\";","export default __webpack_public_path__ + \"static/media/Concrete_Wall_001_roughness.93170752.jpg\";","export default __webpack_public_path__ + \"static/media/Concrete_Wall_001_ambient_occlusion.5ea387a3.jpg\";","import React from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\nimport colorTexture from \"../textures/Concrete_Wall_001_SD/Concrete_Wall_001_basecolor.jpg\";\nimport normalTexture from \"../textures/Concrete_Wall_001_SD/Concrete_Wall_001_normal.jpg\";\nimport roughnessTexture from \"../textures/Concrete_Wall_001_SD/Concrete_Wall_001_roughness.jpg\";\nimport aoTexture from \"../textures/Concrete_Wall_001_SD/Concrete_Wall_001_ambient_occlusion.jpg\";\n\nconst Wall = ({ args, position, scale }) => {\n  const wall = useRef();\n\n  const [colorMap, normalMap, roughnessMap, aoMap] = useLoader(TextureLoader, [\n    colorTexture,\n    normalTexture,\n    roughnessTexture,\n    aoTexture,\n  ]);\n\n  return (\n    <mesh scale={scale} ref={wall} position={position} receiveShadow castShadow>\n      <boxBufferGeometry attach=\"geometry\" args={args} />\n      <meshStandardMaterial\n        map={colorMap}\n        normalMap={normalMap}\n        roughnessMap={roughnessMap}\n        aoTexture={aoMap}\n        aoMapIntensity={2}\n      />\n    </mesh>\n  );\n};\n\nexport default Wall;\n","export default __webpack_public_path__ + \"static/media/uploads_files_2551085_tree.cad906d2.glb\";","import React, { Suspense } from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nimport treeModel from \"../models/uploads_files_2551085_tree.glb\";\n\nconst Tree = ({ scale, position, roughness }) => {\n  const gltf = useLoader(GLTFLoader, treeModel);\n\n  console.log(\"treeModel\", treeModel);\n\n  if (gltf) {\n    console.log(\"tree\", gltf.nodes.Cube);\n    gltf.nodes.Cube.castShadow = true;\n    gltf.nodes.Cube.receiveShadow = true;\n    gltf.nodes.Cube.roughness = { roughness };\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <primitive object={gltf.scene} scale={scale} position={position} />\n    </Suspense>\n  );\n};\n\nexport default Tree;\n","export default __webpack_public_path__ + \"static/media/GroundForest008_COL_6K.7b5ffa04.jpg\";","export default __webpack_public_path__ + \"static/media/GroundForest008_NRM_6K.622d1314.jpg\";","export default __webpack_public_path__ + \"static/media/GroundForest008_DISP_6K.ad95e328.jpg\";","export default __webpack_public_path__ + \"static/media/GroundForest008_AO_6K.575f6740.jpg\";","export default __webpack_public_path__ + \"static/media/GroundForest008_GLOSS_6K.8cf1c8d8.jpg\";","import React from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader.js\";\nimport colorTexture from \"../textures/GroundForest008/REGULAR/6K/GroundForest008_COL_6K.jpg\";\nimport normalTexture from \"../textures/GroundForest008/REGULAR/6K/GroundForest008_NRM_6K.jpg\";\nimport displacementTexture from \"../textures/GroundForest008/REGULAR/6K/GroundForest008_DISP_6K.jpg\";\nimport aoTexture from \"../textures/GroundForest008/REGULAR/6K/GroundForest008_AO_6K.jpg\";\nimport roughnessTexture from \"../textures/GroundForest008/REGULAR/6K/GroundForest008_GLOSS_6K.jpg\";\nimport { NearestFilter, RepeatWrapping } from \"three\";\n\nconst Ground = ({ args, position, scale }) => {\n  const Ground = useRef();\n\n  const [colorMap, normalMap, displacementMap, aoMap, roughnessMap] = useLoader(\n    TextureLoader,\n    [\n      colorTexture,\n      normalTexture,\n      displacementTexture,\n      aoTexture,\n      roughnessTexture,\n    ]\n  );\n\n  // colorMap.offset.set(0.1, 0.1);\n  // colorMap.generateMipmaps = false;\n  // colorMap.minFilter = NearestFilter;\n  // colorMap.magFilter = NearestFilter;\n\n  colorMap.repeat.set(2, 2);\n  colorMap.wrapS = RepeatWrapping;\n  colorMap.wrapT = RepeatWrapping;\n\n  // normalMap.offset.set(0.1, 0.1);\n  // normalMap.generateMipmaps = false;\n  // normalMap.minFilter = NearestFilter;\n  // normalMap.magFilter = NearestFilter;\n\n  normalMap.repeat.set(2, 2);\n  normalMap.wrapS = RepeatWrapping;\n  normalMap.wrapT = RepeatWrapping;\n\n  // displacementMap.offset.set(0.1, 0.1);\n  // displacementMap.generateMipmaps = false;\n  // displacementMap.minFilter = NearestFilter;\n  // displacementMap.magFilter = NearestFilter;\n\n  displacementMap.repeat.set(2, 2);\n  displacementMap.wrapS = RepeatWrapping;\n  displacementMap.wrapT = RepeatWrapping;\n\n  // aoMap.offset.set(0.1, 0.1);\n  // aoMap.generateMipmaps = false;\n  // aoMap.minFilter = NearestFilter;\n  // aoMap.magFilter = NearestFilter;\n\n  aoMap.repeat.set(2, 2);\n  aoMap.wrapS = RepeatWrapping;\n  aoMap.wrapT = RepeatWrapping;\n\n  // roughnessMap.offset.set(0.1, 0.1);\n  // roughnessMap.generateMipmaps = false;\n  // roughnessMap.minFilter = NearestFilter;\n  // roughnessMap.magFilter = NearestFilter;\n\n  roughnessMap.repeat.set(2, 2);\n  roughnessMap.wrapS = RepeatWrapping;\n  roughnessMap.wrapT = RepeatWrapping;\n\n  return (\n    <mesh\n      scale={scale}\n      ref={Ground}\n      position={[0, -4.4, 0]}\n      rotation={[-Math.PI * 0.5, 0, 0]}\n      receiveShadow\n    >\n      <planeBufferGeometry attach=\"geometry\" args={[45, 45]} />\n      <meshLambertMaterial\n        attach=\"material\"\n        map={colorMap}\n        normalMap={normalMap}\n        displacementMap={displacementMap}\n        displacementScale={5}\n        aoTexture={aoMap}\n        lightMapIntensity={2}\n        // aoMapIntensity={2}\n        // roughness={0.1}\n        roughnessMap={roughnessMap}\n      />\n    </mesh>\n  );\n};\n\nexport default Ground;\n","export default __webpack_public_path__ + \"static/media/uploads_files_2551085_tree2.cad906d2.glb\";","import React, { Suspense } from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nimport treeModel from \"../models/uploads_files_2551085_tree2.glb\";\n\nconst Tree2 = ({ scale, position, roughness }) => {\n  const gltf = useLoader(GLTFLoader, treeModel);\n\n  console.log(\"treeModel\", treeModel);\n\n  if (gltf) {\n    console.log(\"tree\", gltf.nodes.Cube);\n    gltf.nodes.Cube.castShadow = true;\n    gltf.nodes.Cube.receiveShadow = true;\n    gltf.nodes.Cube.roughness = { roughness };\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <primitive object={gltf.scene} scale={scale} position={position} />\n    </Suspense>\n  );\n};\n\nexport default Tree2;\n","export default __webpack_public_path__ + \"static/media/mapleTree.cb47a27e.glb\";","import React, { Suspense } from \"react\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nimport treeModel from \"../models/mapleTree.glb\";\n\nconst MapleTree = ({ scale, position, roughness }) => {\n  const gltf = useLoader(GLTFLoader, treeModel);\n\n  return (\n    <Suspense fallback={null}>\n      <primitive object={gltf.scene} scale={scale} position={position} />\n    </Suspense>\n  );\n};\n\nexport default MapleTree;\n","import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport FrontText from \"./FrontText\";\nimport { Suspense, useRef } from \"react\";\nimport BackText from \"./BackText\";\nimport Wall from \"./Wall\";\nimport Tree from \"./Tree\";\nimport Ground from \"./Ground\";\nimport Tree2 from \"./Tree2\";\nimport MapleTree from \"./MapleTree\";\n\nconst Project1 = () => {\n  const wall = useRef();\n\n  return (\n    <>\n      <Canvas shadows camera={{ position: [-6, 2, 30], fov: 45 }}>\n        <hemisphereLight intensity={0.1} />\n        <directionalLight\n          castShadow\n          position={[0, -0.5, 10]}\n          intensity={0.4}\n          far={1}\n          shadow-mapSize-width={360}\n          shadow-mapSize-height={360}\n          shadow-camera-left={-12}\n          shadow-camera-right={12}\n        />\n        <directionalLight\n          castShadow\n          position={[0, -0.5, -10]}\n          intensity={0.4}\n          shadow-mapSize-width={360}\n          shadow-mapSize-height={360}\n          shadow-camera-left={-12}\n          shadow-camera-right={12}\n        />\n\n        <Suspense fallback={null}>\n          <group ref={wall}>\n            <Tree scale={0.6} position={[-10, -4.4, 4]} roughness={0.01} />\n            <Tree2 scale={0.6} position={[10, -4.4, -8]} roughness={0.01} />\n            <MapleTree scale={55} position={[14, -4.5, 14]} roughness={0.01} />\n\n            <FrontText position={[0, 0, 4]} scale={0.06} color={\"orange\"} />\n            <Wall position={[0, 0, 0]} scale={3} args={[8, 3, 0.15]} />\n            <BackText\n              position={[0, 0, -4]}\n              scale={0.06}\n              rotation={[0, Math.PI, 0]}\n              color={\"orange\"}\n            />\n\n            <Ground />\n          </group>\n        </Suspense>\n        <OrbitControls />\n      </Canvas>\n    </>\n  );\n};\n\nexport default Project1;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <div className=\"logo\">\n        <span>REACT THREE FIBER</span>\n      </div>\n      <div className=\"episode\">\n        <span>Dan - Project. 1</span>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import Project1 from \"./Components/Project1\";\nimport \"./App.scss\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Project1 />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}